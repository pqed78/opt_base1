mkdir -p optimus_ws/src
cd optimus_ws/src
ros2 pkg create --build-type ament_python optimus_vision0
ros2 pkg create --build-type ament_cmake ssd_mobilenet_inference_msgs

Modifiy:setup.py -----------
#!/usr/bin/env python3

import glob
import os

from setuptools import find_packages
from setuptools import setup


package_name = 'optimus_vision0'
# util = 'optimus_vision0/util'

setup(
    name=package_name,
    version='0.0.0',
    packages=find_packages(exclude=['test']),
    # packages=[package_name, util],
    data_files=[
        ('share/ament_index/resource_index/packages',
            ['resource/' + package_name]),
        ('share/' + package_name, ['package.xml']),
        ('share/' + package_name+'/launch', glob.glob(os.path.join('launch', '*.launch.py'))),
    ],
    install_requires=['setuptools'],
    zip_safe=True,
    maintainer='optimus',
    maintainer_email='taekyong.hwang@gmail.com',
    description='TODO: Package description',
    license='TODO: License declaration',
    tests_require=['pytest'],
    entry_points={
        'console_scripts': [
            'streaming_node=optimus_vision0.streaming_node:main',
            'publication_node=optimus_vision0.publication_node:main', 
        ],
    },
)
---------------------------------------

install at rasp.
sudo apt install ros-humble-rqt-image-view
ros2 run rqt_image_view rqt_image_view

sudo apt install libraspberrypi-bin v4l-utils ros-humble-v4l2-camera ros-humble-image-transport-plugins
if not working then sudo apt-get update or sudo apt update


after enabling legacy camera interface via raspi-config, vcgencmd get_camera outputs supported=1 detected=1. That said, Electron app still doesn’t detect camera. –
still notworking with ubuntu22.04
--------------------------
install at rasp.
vcgencmd get_camera # to check available camera working

depthai
sudo wget -qO- https://docs.luxonis.com/install_dependencies.sh | bash
(not working but it was working one day later with 2.23 version)

Oak-D camera is not usable after rebooting since /oakd /oakd_container node is already using Xlink.
Therefore, to prevent OakD from launching with booting, need to correct standard.launch.py under /etc/ros/humble/turtlebot4.d/
Make the following commented
#    oakd_launch_file = PathJoinSubstitution(
#        [pkg_turtlebot4_bringup, 'launch', 'oakd.launch.py'])

#            IncludeLaunchDescription(
#                PythonLaunchDescriptionSource([oakd_launch_file]),
#                launch_arguments=[('camera', 'oakd_pro')]),


~/.bashrc
add 
alias op0="source /home/ubuntu/optimus_ws/install/local_setup.bash; echo \"optimus_vision0 is activated\"">


----navigation error-----



terminal
->ros2 run tf2_ros static_transform_publisher "0" "0" "0" "0" "0" "0" "map" "scan"

or launch file 

import launch
from launch import LaunchDescription
from launch_ros.actions import Node

def generate_launch_description():

    return LaunchDescription([
        Node(
            package='tf2_ros',
            namespace = 'scan_to_map',
            executable='static_transform_publisher',
            arguments= ["0", "0", "0", "0", "0", "0", "map", "scan"]
        )
    ])
    
or  direct correction to the following files
/opt/ros/humble/share/turtlebot4_bringup/launch/robot.launch.py
->correction


#!/usr/bin/env python3
# Copyright 2021 Clearpath Robotics, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# @author Roni Kreinin (rkreinin@clearpathrobotics.com)


from ament_index_python.packages import get_package_share_directory

from launch import LaunchDescription
from launch.actions.declare_launch_argument import DeclareLaunchArgument
from launch.conditions import LaunchConfigurationEquals
from launch.substitutions import LaunchConfiguration, PathJoinSubstitution

from launch_ros.actions import Node


ARGUMENTS = [
    DeclareLaunchArgument('use_sim', default_value='false',
                          choices=['true', 'false'],
                          description='use_sim'),
    DeclareLaunchArgument('model', default_value='standard',
                          choices=['standard', 'lite'],
                          description='Turtlebot4 Model')
]


def generate_launch_description():

    pkg_turtlebot4_bringup = get_package_share_directory('turtlebot4_bringup')

    param_file_cmd = DeclareLaunchArgument(
        'param_file',
        default_value=PathJoinSubstitution(
            [pkg_turtlebot4_bringup, 'config', 'turtlebot4.yaml']),
        description='Turtlebot4 Robot param file'
    )

    turtlebot4_param_yaml_file = LaunchConfiguration('param_file')

    turtlebot4_node = Node(
        package='turtlebot4_node',
        executable='turtlebot4_node',
        parameters=[turtlebot4_param_yaml_file,
                    {'model': LaunchConfiguration('model')}],
        output='screen')

    turtlebot4_base_node = Node(
        package='turtlebot4_base',
        executable='turtlebot4_base_node',
        parameters=[turtlebot4_param_yaml_file],
        output='screen',
        condition=LaunchConfigurationEquals('model', 'standard')
    )

    transformation_node = Node(
        package='tf2_ros',
        namespace = 'scan_to_map',
        executable='static_transform_publisher',
        arguments= ["0", "0", "0", "0", "0", "0", "map", "scan"]
    )

    ld = LaunchDescription(ARGUMENTS)
    ld.add_action(param_file_cmd)
    ld.add_action(turtlebot4_node)
    ld.add_action(turtlebot4_base_node)
    ld.add_action(transformation_node)
    return ld
    
    
    
    https://answers.ros.org/question/389383/slam_toolbox-message-filter-dropping-message-for-reason-discarding-message-because-the-queue-is-full/
